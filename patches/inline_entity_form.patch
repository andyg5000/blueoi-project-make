diff -uprb a/includes/commerce_line_item.inline_entity_form.inc b/includes/commerce_line_item.inline_entity_form.inc
--- includes/commerce_line_item.inline_entity_form.inc	2015-06-17 10:54:19.000000000 -0400
+++ includes/commerce_line_item.inline_entity_form.inc	2015-09-23 16:00:29.000000000 -0400
@@ -100,11 +100,21 @@ class CommerceLineItemInlineEntityFormCo
     );
     field_attach_form('commerce_line_item', $line_item, $entity_form, $form_state);

+    // If the order is still in a cart status, then the prices are still being
+    // recalculated, meaning that no changes made to them would be permanent.
+    if (module_exists('commerce_order') && !empty($form_state['commerce_order'])) {
+      if (commerce_cart_order_is_cart($form_state['commerce_order'])) {
+        $language = $entity_form['commerce_unit_price']['#language'];
+        $entity_form['commerce_unit_price'][$language][0]['amount']['#disabled'] = TRUE;
+        $entity_form['commerce_unit_price'][$language][0]['currency_code']['#disabled'] = TRUE;
+        $entity_form['commerce_unit_price'][$language][0]['amount']['#description'] = t('Automatically calculated for shopping cart orders.');
+      }
+    }
+
     // Tweaks specific to product line items.
     if (in_array($line_item->type, $this->productLineItemTypes())) {
       $entity_form['line_item_label']['#access'] = FALSE;
       $entity_form['commerce_display_path']['#access'] = FALSE;
-      $entity_form['commerce_unit_price']['#access'] = FALSE;
       $entity_form['commerce_product']['#weight'] = -100;
     }

@@ -150,8 +160,26 @@ class CommerceLineItemInlineEntityFormCo

     $wrapper = entity_metadata_wrapper('commerce_line_item', $line_item);
     if (in_array($line_item->type, $this->productLineItemTypes())) {
-      // Populate the line item with the product data.
+      // Populate the line item with the product data, preserving the unit price
+      // value that was submitted via the inline entity form.
+      $unit_price = $wrapper->commerce_unit_price->value();
       commerce_product_line_item_populate($line_item, $wrapper->commerce_product->value());
+      $wrapper->commerce_unit_price = $unit_price;
+
+      // If this is a new line item or if it's an existing line item whose unit
+      // price amount or currency was changed...
+      if (!empty($line_item->line_item_id)) {
+        $original_line_item = entity_load_unchanged('commerce_line_item', $line_item->line_item_id);
+        $original_wrapper = entity_metadata_wrapper('commerce_line_item', $original_line_item);
+      }
+
+      // Rebase the unit price to recalculate price components with the
+      // value entered on the inline entity form as the new base price.
+      if (empty($line_item->line_item_id) ||
+        $wrapper->commerce_unit_price->amount->value() <> $original_wrapper->commerce_unit_price->amount->value() ||
+        $wrapper->commerce_unit_price->currency_code->value() <> $original_wrapper->commerce_unit_price->currency_code->value()) {
+        commerce_line_item_rebase_unit_price($line_item);
+      }
     }
     else {
       $wrapper->line_item_label = trim($line_item_values['line_item_label']);
