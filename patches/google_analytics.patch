diff -uprb a/README.txt b/README.txt
--- README.txt	2015-10-18 04:46:10.000000000 -0400
+++ README.txt	2015-07-28 10:28:07.000000000 -0400
@@ -27,8 +27,12 @@ All pages will now have the required Jav
 HTML footer can confirm this by viewing the page source from
 your browser.

-Page specific tracking
-======================
+New approach to page tracking in 5.x-1.5 and 6.x-1.1
+====================================================
+With 5.x-1.5 and 6.x-1.1 there are new settings on the settings page at
+admin/config/system/googleanalytics. The "Page specific tracking" area now
+comes with an interface that copies Drupal's block visibility settings.
+
 The default is set to "Add to every page except the listed pages". By
 default the following pages are listed for exclusion:

@@ -40,24 +44,23 @@ node/*/*
 user/*/*

 These defaults are changeable by the website administrator or any other
-user with 'Administer Google Analytics' permission.
+user with 'administer google analytics' permission.

-Like the blocks visibility settings in Drupal core, there is a choice for
-"Add if the following PHP code returns TRUE." Sample PHP snippets that can be
-used in this textarea can be found on the handbook page "Overview-approach to
-block visibility" at http://drupal.org/node/64135.
+Like the blocks visibility settings in Drupal core, there is now a
+choice for "Add if the following PHP code returns TRUE." Sample PHP snippets
+that can be used in this textarea can be found on the handbook page
+"Overview-approach to block visibility" at http://drupal.org/node/64135.

 Custom dimensions and metrics
 =============================
 One example for custom dimensions tracking is the "User roles" tracking.

-1. In the Google Analytics Management Interface (http://www.google.com/analytics/)
-   you need to setup Dimension #1 with name e.g. "User roles". This step is
-   required. Do not miss it, please.
-
-2. Enter the below configuration data into the Drupal custom dimensions settings
-   form under admin/config/system/googleanalytics. You can also choose another
-   index, but keep it always in sync with the index used in step #1.
+1. In the Google Analytics Management Interface you need to setup Dimension #1
+   with name e.g. "User roles". This step is required. Do not miss it, please.
+
+2. Enter the below configuration data into the custom dimensions settings form
+   under admin/config/system/googleanalytics. You can also choose another index,
+   but keep it always in sync with the index used in step #1.

    Index: 1
    Value: [current-user:role-names]
diff -uprb a/googleanalytics.info b/googleanalytics.info
--- googleanalytics.info	2015-10-18 04:49:12.000000000 -0400
+++ googleanalytics.info	2015-07-28 10:29:14.000000000 -0400
@@ -5,9 +5,9 @@ package = Statistics
 configure = admin/config/system/googleanalytics
 files[] = googleanalytics.test
 test_dependencies[] = token
-; Information added by Drupal.org packaging script on 2015-10-18
-version = "7.x-2.1+13-dev"
+; Information added by Drupal.org packaging script on 2015-07-28
+version = "7.x-2.1+7-dev"
 core = "7.x"
 project = "google_analytics"
-datestamp = "1445158152"
+datestamp = "1438093754"

diff -uprb a/googleanalytics.install b/googleanalytics.install
--- googleanalytics.install	2015-10-18 04:46:10.000000000 -0400
+++ googleanalytics.install	2015-07-28 10:28:07.000000000 -0400
@@ -446,16 +446,16 @@ function googleanalytics_update_7200() {
   if (!empty($googleanalytics_codesnippet_before) && stristr($googleanalytics_codesnippet_before, '_gaq.push(')) {
     variable_set('googleanalytics_codesnippet_before_backup_7200', $googleanalytics_codesnippet_before);
     variable_del('googleanalytics_codesnippet_before');
-    drupal_set_message(Database::getConnection()->prefixTables("A backup of your previous Google Analytics code snippet (ga.js) has been saved in database table '{variable}' as 'googleanalytics_codesnippet_before_backup_7200'. You need to manually upgrade the custom 'before' code snippet to analytics.js API."), 'warning');
-    $messages[] = t('Manual upgrade of custom "before" code snippet from ja.js to analytics.js API is required.');
+    drupal_set_message(Database::getConnection()->prefixTables("A backup of your previous Google Analytics code snippet has been saved in database table '{variable}' as 'googleanalytics_codesnippet_before_backup_7200'. You need to manually upgrade the custom 'before' code snippet."), 'warning');
+    $messages[] = t('Manual upgrade of custom "before" code snippet is required.');
   }

   $googleanalytics_codesnippet_after = variable_get('googleanalytics_codesnippet_after', '');
   if (!empty($googleanalytics_codesnippet_after) && stristr($googleanalytics_codesnippet_after, '_gaq.push(')) {
     variable_set('googleanalytics_codesnippet_after_backup_7200', $googleanalytics_codesnippet_after);
     variable_del('googleanalytics_codesnippet_after');
-    drupal_set_message(Database::getConnection()->prefixTables("A backup of your previous Google Analytics code snippet (ga.js) has been saved in database table '{variable}' as 'googleanalytics_codesnippet_after_backup_7200'. You need to manually upgrade the custom 'after' code snippet to analytics.js API."), 'warning');
-    $messages[] = t('Manual upgrade of custom "after" code snippet from ja.js to analytics.js API is required.');
+    drupal_set_message(Database::getConnection()->prefixTables("A backup of your previous Google Analytics code snippet has been saved in database table '{variable}' as 'googleanalytics_codesnippet_before_backup_7200'. You need to manually upgrade the custom 'before' code snippet."), 'warning');
+    $messages[] = t('Manual upgrade of custom "after" code snippet is required.');
   }

   return empty($messages) ? t('No custom code snipped found. Nothing to do.') : implode(' ', $messages);
diff -uprb a/googleanalytics.module b/googleanalytics.module
--- googleanalytics.module	2015-10-18 04:46:10.000000000 -0400
+++ googleanalytics.module	2015-07-28 10:28:07.000000000 -0400
@@ -352,10 +352,10 @@ function googleanalytics_page_alter(&$pa
       // Custom tracking. Prepend before all other JavaScript.
       // @TODO: https://support.google.com/adsense/answer/98142
       // sounds like it could be appended to $script.
-      drupal_add_js($googleanalytics_adsense_script, array('type' => 'inline', 'group' => JS_LIBRARY-1, 'requires_jquery' => FALSE));
+      drupal_add_js($googleanalytics_adsense_script, array('type' => 'inline', 'group' => JS_LIBRARY-1));
     }

-    drupal_add_js($script, array('scope' => 'header', 'type' => 'inline', 'requires_jquery' => FALSE));
+    drupal_add_js($script, array('scope' => 'header', 'type' => 'inline'));
   }
 }

@@ -456,7 +456,7 @@ function googleanalytics_preprocess_sear
     // found. But the pager item mumber can tell the number of search results.
     global $pager_total_items;

-    drupal_add_js('window.googleanalytics_search_results = ' . intval($pager_total_items[0]) . ';', array('type' => 'inline', 'group' => JS_LIBRARY-1, 'requires_jquery' => FALSE));
+    drupal_add_js('window.googleanalytics_search_results = ' . intval($pager_total_items[0]) . ';', array('type' => 'inline', 'group' => JS_LIBRARY-1));
   }
 }

