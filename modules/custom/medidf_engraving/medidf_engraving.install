<?php
/**
 * @file medidf_engraving.install
 * TODO: Enter file description here.
 */

define("MEDIDF_ENGRAVING_SKU", "engraving-fee");
define("MEDIDF_ENGRAVING_LI_FIELD", "field_le_engraving");

/**
 * Implements hook_enable().
 */
function medidf_engraving_enable() {
  $engraving_fee_product = commerce_product_load_by_sku(MEDIDF_ENGRAVING_SKU);
  if ($engraving_fee_product == FALSE) {
    medidf_engraving_install_engraving_product();
  }
  medidf_engraving_add_engraving_field('commerce_line_item', 'product', MEDIDF_ENGRAVING_LI_FIELD);
}

/**
 * Implements hook_uninstall().
 */
function medidf_engraving_uninstall() {
  // Delete any engraving_field fields.
  module_load_include('module', 'commerce');
  commerce_delete_fields('engraving_field');
}

/**
 * Implements hook_field_schema().
 */
function medidf_engraving_field_schema($field) {
  if ( !isset($field['type']) ) {
    return;
  }
  if ( $field['type'] !== 'engraving_field' ) {
    return;
  }
  $columns = array(
    'engr_label' => array('type' => 'varchar', 'length' => 35, 'not null' => FALSE),
    'engr_amount' => array('type' => 'varchar', 'length' => 10, 'not null' => FALSE),
    'engr_maxlength' => array('type' => 'char', 'length' => 3, 'not null' => FALSE),
    'engr_group_type' => array('type' => 'char', 'length' => 10, 'not null' => FALSE),
    'engr_customer_input' => array('type' => 'varchar', 'length' => 255, 'not null' => FALSE),
  );
  $indexes = array();
  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}

/**
 * Utility funciton to create engraving product , with 0.0 amount.
 */
function medidf_engraving_install_engraving_product() {
  $form_state = array();
  $form_state['values'] = array();
  $form = array();
  $form['#parents'] = array();
  // Generate a new product object
  $new_product = commerce_product_new('product');
  $new_product->status = 1;
  $new_product->uid = 1;
  $new_product->sku = MEDIDF_ENGRAVING_SKU;
  $new_product->title = 'Engraving Fee';
  $new_product->created = $new_product->changed = time();
  //commerce_price[und][0][amount]
  $price = array(LANGUAGE_NONE => array(0 => array(
        'amount' => 0, 
        'currency_code' => commerce_default_currency(),
      )));
  $form_state['values']['commerce_price'] = $price;
  // Notify field widgets to save their field data
  field_attach_submit('commerce_product', $new_product, $form, $form_state);
  commerce_product_save($new_product);
}

/**
 * Ensures the engraving field is instantiated to proper entity.
 *
 * @param $entity_type
 * @param $bundle
 * @param $field_name
 */
function medidf_engraving_add_engraving_field($entity_type, $bundle, $field_name) {

  // If a field type we know should exist isn't found, clear the Field cache.
  if (!field_info_field_types('engraving_field')) {
    field_cache_clear();
  }
  $field = field_info_field($field_name);
  $instance = field_info_instance($entity_type, $field_name, $bundle);

  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'engraving_field',
      'cardinality' => -1,
      'translatable' => FALSE,
      'locked' => TRUE,
    );
    $field = field_create_field($field);
  }

  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'bundle' => $bundle,
      'label' => t('Engraving Field'),
      'required' => TRUE,
      'settings' => array(),

      'widget' => array(
        'type' => 'hidden',
        'weight' => 0,
      ),

      'display' => array(
        'display' => array(
          'label' => 'medidf_engraving_show_cart_values',
          'weight' => 0,
        ),
      ),
    );
    field_create_instance($instance);
  }
}