<?php

/**
 * Implements hook_commerce_line_item_type_info().
 */
function medicalidfashions_generic_line_item_commerce_line_item_type_info() {
  $line_item_types = array();

  $line_item_types['medicalidfashions_generic_line_item'] = array(
    'name' => t('Generic Line Item'),
    'description' => t('Allows creation of line item without product reference'),
    'add_form_submit_value' => t('Add line item'),
    'base' => 'medicalidfashions_generic_line_item',
  );

  return $line_item_types;
}

/**
 * Configure the commerce gift card line item fields.
 */
function medicalidfashions_generic_line_item_configuration($line_item_type) {
  $type = $line_item_type['type'];

  foreach (medicalidfashions_generic_line_item_line_item_fields() as $field_name => $field_values) {
    $field = field_info_field($field_name);
    $instance = field_info_instance('commerce_line_item', $field_name, $type);
    if (empty($field)) {
      $field = array(
        'field_name' => $field_name,
        'type' => $field_values['type'],
        'cardinality' => $field_values['cardinality'],
        'entity_types' => array('commerce_line_item'),
        'translatable' => FALSE,
        'locked' => FALSE,
        'settings' => !empty($field_values['settings']) ? $field_values['settings'] : array(),
      );
      $field = field_create_field($field);
    }

    if (empty($instance)) {
      $instance = array(
        'field_name' => $field_name,
        'entity_type' => 'commerce_line_item',
        'bundle' => $type,
        'label' => $field_values['label'],
        'description' => $field_values['description'],
        'required' => !empty($field_values['required']) ? $field_values['required'] : FALSE,
        'settings' => array(),
        'commerce_cart_settings' => !empty($field_values['commerce_cart_settings']) ? $field_values['commerce_cart_settings'] : array(),
        'widget' => !empty($field_value['widget']) ? $field_values['widget'] : array(),
        'display' => !empty($field_value['display']) ? $field_values['display'] : array(),
      );
      field_create_instance($instance);
    }
  }
}

/**
 * Return an array of field definitions for medicalidfashions_generic_line_item line items.
 */
function medicalidfashions_generic_line_item_line_item_fields() {
  return array(
    'medicalidfashions_line_item_note' => array(
      'type' => 'text_long',
      'cardinality' => 1,
      'label' => t('Notes'),
      'description' => t('Notes about this item'),
      'display' => array(),
     ),
  );
}

/**
 * Returns the title of a shipping line item's related shipping service.
 */
function medicalidfashions_generic_line_item_title($line_item) {
  // Fallback to the line item label.
  return $line_item->line_item_label;
}
